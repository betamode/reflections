How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By showing the lines that differ between both files

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By saving the time that it takes to compare files manually and also avoiding confusion.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Both modes have pros and cons, but I prefer manually commit changes based on my own judge.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because it's been designed specifically for version control in software development.

How can you use the commands git log and git diff to view the history of files?

    At first, determine which are the ID of the commits to check with git log, then use git diff to compare both commits and see what the changes are.

How might using version control make you more confident to make changes that
could break something?

    You can go back and fort by checking a commit out at any time.

Now that you have your workspace set up, what do you want to try using Git for?

    Check changes between versions
